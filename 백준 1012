from sys import stdin
from collections import deque
nx = [1, -1, 0, 0]
ny = [0, 0, 1, -1]
inp = stdin.readline
t = int(inp())

def bfs(graph, a, b):
  queue = deque()
  graph[a][b] = 0
  queue.append((a, b))
  while queue:
    x, y = queue.popleft()
    for i in range(4):
      dx = x + nx[i]
      dy = y + ny[i]
      if dx < 0 or dx >= n or dy < 0 or dy >= m:
        continue
      if graph[dx][dy] == 1:
        graph[dx][dy] = 0
        queue.append((dx, dy))
  return

for _ in range(t):
  n, m, k = map(int, inp().split())
  graph = [[0] * m for _ in range(n)]
  cnt = 0
  for i in range(k):
    x, y = map(int, inp().split())
    graph[x][y] = 1
  for a in range(n):
    for b in range(m):
      if graph[a][b] == 1:
        bfs(graph, a, b)
        cnt += 1
  print(cnt)
